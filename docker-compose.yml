version: '2'
volumes:
    node-red-data:
    nodered_working_dir:
    node_modules:
    redis-data:
    redis-config:
    haproxy-data:
    snapdrop-config:
    snapdrop-data:    #attention les mises à jours de ce soft ne s'appliqueront plus si on delete pas les data dans ce dossier
    heimdall-config:
    homer-data:
    ombi-config:
services:
  proxy:
    build: ./haproxy
    depends_on:
      - frontend
      - data
      - nodered
      - redis
      - scp-server
    volumes:
      - haproxy-data:/usr/local/etc/haproxy
    ports:
      - "80:80"
  frontend:
    build: ./frontend
    expose:
      - "80"
  data:
    build: ./data
    expose:
      - "8080"
  nodered:
    build: ./nodered
    environment:
      - UDEV=1  #active le hotplug des périphérique USB par ex mais il faut que privileged true soit déclarer aussi # see https://www.balena.io/docs/reference/base-images/base-images/#working-with-dynamically-plugged-devices
      - 'DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket'
    volumes:
      - node-red-data:/data
      - nodered_working_dir:/usr/src/app
      - node_modules:/usr/local/lib/node_modules
    restart: no #always
    privileged: true
    #network_mode: host
    labels:
      io.balena.features.supervisor-api: '1'  #pour les noeud nidered ??
      io.balena.features.dbus: '1'
      #???io.balena.features.kernel-modules: '1'
    cap_add:
      - SYS_RAWIO
    devices:
      - "/dev/mem:/dev/mem"
      - "/dev/gpiomem:/dev/gpiomem"
      - "/dev/i2c-1:/dev/i2c-1"
      #- "/dev/i2c-0:/dev/i2c-0"    # TODO. Modif à faire pour l'activer car utiliser pour les shields normalement
      - "/dev/i2c-4:/dev/i2c-4"
      - "/dev/ttyACM0:/dev/ttyACM0"   #Port série
      - "/dev/ttyAMA0:/dev/ttyAMA0"   #Dobaos
      - "/dev/input/by-path/:/dev/input/by-path/"   #pour le noeud clavier avec les noeud gpio
    ports:
      - 81:81
      - 1883:1883
      - 1400:1400
      - 1880:1880
      - 1980:1880
    expose:
      - "80"
  scp-server:
    network_mode: host
    restart: always
    build:
      context: ./scp-server
    privileged: false
    labels:
      io.balena.features.dbus: 1
    volumes:
      - node-red-data:/data/node-red-data
      - nodered_working_dir:/data/nodered_working_dir
      - node_modules:/data/node_modules
      - redis-data:/data/redis-data
      - redis-config:/usr/local/etc/redis
      - haproxy-data:/data/haproxy-data
      - snapdrop-config:/data/snapdrop-config
      - snapdrop-data:/data/snapdrop-data  #attention les mises à jours de ce soft ne s'appliqueront plus si on delete pas les data dans ce dossier
      - heimdall-config:/data/heimdall-config
      - homer-data:/data/homer-data
      - ombi-config:/data/ombi-config
    ports:
      - "22:22/udp"
      - "22:22/tcp"  
  redis:
    build: ./redis
    privileged: true
    restart: always
    #network_mode: host
    volumes:
      - 'redis-data:/data'
      - 'redis-config:/usr/local/etc/redis'
    ports:
      - "6379:6379"
  homer:
    #https://github.com/bastienwirtz/homer
    image: b4bz/homer
    #To build from source, comment previous line and uncomment below
    #build: .
    container_name: homer
    volumes:
      - homer-data:/www/assets
    network_mode: host
    ports:
      - 87:87
      - 8080:8080
    environment:
      - UID=1000
      - GID=1000
    restart: no #unless-stopped
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ombi-config:/config
    ports:
      - 3579:3579
    restart: unless-stopped
  heimdall:
    image: ghcr.io/linuxserver/heimdall:arm64v8-latest
    #container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - heimdall-config:/config
    ports:
      - 86:86
      - 445:443
    restart: unless-stopped
  snapdrop:
    image: ghcr.io/linuxserver/snapdrop:arm64v8-latest
    #container_name: snapdrop
    environment:
      #- PUID=1000
      #- PGID=1000
      - TZ=Europe/London
    volumes:
      - snapdrop-config:/config
      - snapdrop-data:/app/snapdrop
    ports:
      - 88:88
      - 443:443
      - 3000:3000
    restart: no #unless-stopped